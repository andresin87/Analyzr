jQuery(document).ready(function($) {
	
	//load the recapthcha widget each time we open a a modal
	//if we dont have a recapthcha template don`t load
	$(document).on('open', '[data-reveal]', function () {

		var recaptcha_template = $('#recaptcha_template');
		if(recaptcha_template.length)
		{
			var recaptcha_element = $(this).find('.PLS_recaptcha');
			$('.PLS_recaptcha').html('');
			if(recaptcha_element.length)
			{
				recaptcha_element.html(recaptcha_template.html());
				$.getScript('http://www.google.com/recaptcha/api/js/recaptcha_ajax.js', function() { 
	                    Recaptcha.create(PLS_config.recaptcha_public_key, 'PLS_recaptcha_widget', {theme : 'custom', custom_theme_widget: 'PLS_recaptcha_widget'}); 
	               });
			}
		}
	});


	//upload using iframe
	$('.crop_upload input').on('change', function(event) {
		if($(this).val())
			PLS.Upload();
	});

	//AJAX
	$('.ajaxform').on('submit', function(event) {
		event.preventDefault();

		var form = $(this);
			formData = form.serializeArray(),
			submit = form.find('[type="submit"]'),
			action = form.find('[name=action]').val(),
			alert = form.find('.message-box')

		submit.prop('disabled', true);
		PLS.Alert(alert, 2, 'Loading ...');
		
		$.ajax({
		url: PLS_config.ajax_url,
		type: 'POST',
		dataType: 'json',
		data: formData,
		})
		.done(function(response) {
			if(response.success)
			{
				if(action == 'login' || action == 'admin_delete')
					window.location.reload();
				else 
					PLS.Alert(alert, 1, response.message);

				if(action == 'settings_crop')
				{
					$('.avatar').attr('src', response.data.avatar);
					PLS.Alert($('.crop_form .message-box'), -1, "");
				}

				if(action == 'settings_general')
					$('.username').text(response.data.username);

				if(action == 'admin_add' || action == 'signup')
					PLS.ClearForm();
			}
			else
			{
				PLS.Alert(alert, 0, response.message);

				if(action == 'settings_general' || action == 'admin_edit')
				{
					form.find('[name=email]').val(response.data.email);
					form.find('[name=username]').val(response.data.username);
				}
			}
		})
		.fail(function(response) {
			PLS.Alert(alert, 0, 'Ajax response error.');
		})
		.always(function() {
			form.find('[type="password"]').val('');
			submit.prop('disabled', false);

			if(action == 'settings_crop')
				PLS.ResetUpload();
			if(typeof Recaptcha == 'object' && form.find('.recaptcha').length) 
				Recaptcha.reload();
		})
	});
});


var PLS = {

	Alert: function(element, type, message) 
	{
		if(typeof message === 'string')
			message = [message];

		element.html('').removeClass().addClass('message-box');
		if(type != -1)
		{
			element.append('<ul></ul>');
			$.each(message, function(index, val) {element.find('ul').append('<li>' + val + '</li>');});

			//foundation styling
			var message_class = (type == 0) ? 'alert' : (type == 1) ? 'success' : (type == 2) ? 'warning' : '';
			console.log(message_class);
			element.addClass('alert-box').addClass(message_class);

			element.append('<a class="close">&times;</a>');
			element.find('.close').on('click',  function(event) {
				PLS.Alert(element, -1, "");
			});
		}
	},

	ConfirmDelete: function(id, username)
	{
		var modal = $('#confirmdelete');
		modal.find('strong').html(username);
		modal.find('[name=user_id]').val(id);
		modal.foundation('reveal', 'open');
	},

	Compose: function(email)
	{
		var modal = $('#compose');
		modal.find('[name=email]').val(email);
		modal.foundation('reveal', 'open');
	},

	ClearForm: function()
	{
		$('input')
		  .not(':button, :submit, :reset, :hidden')
		  .val('')
		  .removeAttr('checked');
	},

	//Iframe Upload function
	Upload: function()
	{
		PLS.ResetUpload();
		var iframe = $('<iframe class="upload_element" name="upload_frame" style="display:none;"></iframe>'),
			action = $('<input type="hidden" name="action" value="settings_upload">'),
			form = $('<form class="upload_element" action=' + PLS_config.ajax_url + ' method="POST" enctype="multipart/form-data" target="upload_frame" style="display:none;"></form>'),
			upload_field = $('.crop_upload input').clone(),
			alert = $('.crop_form .message-box');

		upload_field.on('change', function(event) {
			if($(this).val())
				PLS.Upload();
		});

		$('body').append(form.append(action).append($('.crop_upload input'))).append(iframe);
		form.trigger('submit');
		PLS.Alert(alert, 2, 'Uploading...')

		iframe.on('load', function(event) {
			if($(this).contents().find('body').html())
			{
				try{var response = $.parseJSON($(this).contents().find('body').html());}catch(e){}
				if(response)
				{
					if(!response.success)
					{
						PLS.Alert(alert, 0, response.message);
					}
					else
					{
						var img = $('<img src=' + response.data.avatar + ' style="width:100%;">');
						$('.crop_image').append(img);
						var x = new Image();
						x.src = img.attr('src');
						x.onload = function(){
							img.Jcrop({aspectRatio: 1, bgColor: 'white', bgOpacity: 0.3, trueSize: [x.width,x.height], onSelect: PLS.UpdateCoords});
						}
						$('.crop_save').attr('disabled', false);
						$('.crop_save').show();
						PLS.Alert(alert, -1, "");
					}
				}
				else
					PLS.Alert(alert, 0, 'Invalid JSON response!');
				$('.crop_upload').append(upload_field);
				$('.upload_element').remove();
				
			}
		});
	},

	//helper function for reseting the upload modal
	ResetUpload: function()
	{
		$('.crop_image').html('');
		$('.crop_form .message-box').html('');
		$('.crop_save').attr('disabled', true);
		$('.crop_save').hide();
		$('.upload_element').remove();
		PLS.ResetCoords();
	},

	//Jcrop helper function for crop coords
	UpdateCoords: function(c)
	{
		$('#x').val(c.x);
	    $('#y').val(c.y);
	    $('#w').val(c.w);
	    $('#h').val(c.h);
	},

	//Jcrop helper function for reseting crop coords
	ResetCoords: function()
	{
		$('#x').val('');
	    $('#y').val('');
	    $('#w').val('');
	    $('#h').val('');
	},
};